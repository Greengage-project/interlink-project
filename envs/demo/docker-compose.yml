version: "3.9"
services:
  # Traefik Service
  proxy:
    image: traefik:v2.6.6
    container_name: ${PLATFORM_STACK_NAME}-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8090:8080"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker=true
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Redirect Http to Https
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
      # - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=apps@interlink-project.eu
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json

      # httpchallenge
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true

      # staging
      # - --certificatesResolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory

    labels:
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

      # - traefik.http.middlewares.iframeHeaders.headers.customresponseheaders.Content-Security-Policy=frame-ancestors 'self' ${DOMAIN} *.${MAIN_DOMAIN}
      # - traefik.http.middlewares.iframeHeaders.headers.customresponseheaders.X-Frame-Options=ALLOW-FROM https://${MAIN_DOMAIN}
      # - traefik.http.middlewares.iframeHeaders.headers.customresponseheaders.Access-Control-Allow-Origin=*
      # - traefik.http.middlewares.iframeHeaders.headers.customresponseheaders.Access-Control-Allow-Methods=DELETE, POST, PUT, GET, OPTIONS
      # - traefik.http.middlewares.iframeHeaders.headers.customresponseheaders.Access-Control-Allow-Headers=Content-Type, Authorization, X-Requested-With
    networks:
      - traefik-public

    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  crontab:
    image: greengageproject/crontab:master
    container_name: ${PLATFORM_STACK_NAME}-crontab
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - KPIS_GOOGLE_PROJECT_ID=${KPIS_GOOGLE_PROJECT_ID}
      - KPIS_GOOGLE_PRIVATE_KEY_ID=${KPIS_GOOGLE_PRIVATE_KEY_ID}
      - KPIS_GOOGLE_PRIVATE_KEY=${KPIS_GOOGLE_PRIVATE_KEY}
      - KPIS_GOOGLE_CLIENT_EMAIL=${KPIS_GOOGLE_CLIENT_EMAIL}
      - KPIS_GOOGLE_CLIENT_ID=${KPIS_GOOGLE_CLIENT_ID}
      - KPIS_GOOGLE_CLIENT_X509=${KPIS_GOOGLE_CLIENT_X509}
      - DREMIO_EMAIL=${DREMIO_EMAIL}
      - DREMIO_USERNAME=${DREMIO_USERNAME}
      - DREMIO_PASSWORD=${DREMIO_PASSWORD}
    volumes:
      # Enable docker commands
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Cronjobs configuration and specification
      - ./cronjobs/config.json:/opt/crontab/config.json:rw
      - ./cronjobs/entrypoint.sh:/entrypoint.sh
      - ./cronjobs/jobs:/opt/jobs
      #Â Volumes to be backup
      - matomo-data:/opt/volumes/matomo-data
      - mariadb-data:/opt/volumes/mariadb-data
      - monitoringdb-data:/opt/volumes/monitoringdb-data
      - newelasticsearch-data:/opt/volumes/newelasticsearch-data
      - elasticsearch-data:/opt/volumes/elasticsearch-data
      - mongodb-data:/opt/volumes/mongodb-data
      - db-data:/opt/volumes/db-data
      - dremio-data:/opt/volumes/dremio-data
      - portainer-data:/opt/volumes/portainer-data
      - auth-static:/opt/volumes/auth-static
      - coproduction-static:/opt/volumes/coproduction-static
      - catalogue-static:/opt/volumes/catalogue-static
      # Volume for the backup files
      - backups:/opt/backups
    networks:
      - traefik-public

  portainer:
    image: portainer/portainer-ce:2.11.1-alpine
    container_name: ${PLATFORM_STACK_NAME}-portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik-public
    environment:
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer-data:/data
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PLATFORM_STACK_NAME}-portainer.entrypoints=websecure
      - traefik.http.routers.${PLATFORM_STACK_NAME}-portainer.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME}-portainer.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME}-portainer.rule=Host(`portainer.${DOMAIN}`)
      - traefik.http.services.${PLATFORM_STACK_NAME}-portainer.loadbalancer.server.port=9000
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  # Frontend Service
  frontend:
    image: greengageproject/frontend:${FRONTEND_VERSION}
    container_name: ${PLATFORM_STACK_NAME}-frontend
    restart: unless-stopped
    volumes:
      - ./frontend-customization:/usr/share/nginx/html/static/customization
    environment:
      - DOMAIN
      - NODE_ENV=production
      - REACT_APP_DOMAIN=${DOMAIN}
      - REACT_APP_PROTOCOL=https://
      - REACT_APP_DEFAULT_LANGUAGE=${DEFAULT_LANGUAGE}
      - REACT_APP_ALLOWED_LANGUAGES=${ALLOWED_LANGUAGES}
      - TZ=${TZ}
      - REACT_APP_MATOMO_ID=1
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME}-frontend.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME}-frontend.entrypoints=websecure
      - traefik.http.routers.${PLATFORM_STACK_NAME}-frontend.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME}-frontend.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME}-frontend.rule=Host(`${DOMAIN}`) && PathPrefix(`/`)
    networks:
      - traefik-public
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  frontend-docs:
    image: greengageproject/frontend-docs:${FRONTEND_VERSION}
    container_name: ${PLATFORM_STACK_NAME}-frontend-docs
    restart: unless-stopped
    networks:
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME}-frontend-docs.loadbalancer.server.port=80
      - traefik.http.routers.${PLATFORM_STACK_NAME}-frontend-docs.entrypoints=websecure
      - traefik.http.routers.${PLATFORM_STACK_NAME}-frontend-docs.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME}-frontend-docs.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME}-frontend-docs.rule=Host(`${DOMAIN}`) && PathPrefix(`/docs`)
      - traefik.http.routers.${PLATFORM_STACK_NAME}-frontend-docs.middlewares=frontend-docs-stripprefix
      - traefik.http.middlewares.frontend-docs-stripprefix.stripprefix.prefixes=/docs
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  mariadb:
    image: mariadb:10.10.2
    container_name: ${PLATFORM_STACK_NAME}-mariadb
    restart: unless-stopped
    command: --max-allowed-packet=64MB
    volumes:
      - mariadb-data:/var/lib/mysql
    env_file:
      - .env
    networks:
      - traefik-public
      - grafana-network
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  matomo:
    image: bitnami/matomo:4.10.1
    container_name: ${PLATFORM_STACK_NAME}-matomo
    restart: unless-stopped
    volumes:
      - matomo-data:/bitnami/matomo
    env_file:
      - .env
    networks:
      - traefik-public
    depends_on:
      - mariadb
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME}-matomo.loadbalancer.server.port=8080
      - traefik.http.routers.${PLATFORM_STACK_NAME}-matomo.entrypoints=websecure
      - traefik.http.routers.${PLATFORM_STACK_NAME}-matomo.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME}-matomo.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME}-matomo.rule=Host(`${DOMAIN}`) && PathPrefix(`/matomo/`)
      - traefik.http.routers.${PLATFORM_STACK_NAME}-matomo.middlewares=matomo-stripprefix
      - traefik.http.middlewares.matomo-stripprefix.stripprefix.prefixes=/matomo/
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  # Redis Service
  redis:
    image: redis:6-alpine
    container_name: ${PLATFORM_STACK_NAME}-redis
    restart: unless-stopped
    networks:
      - traefik-public
      - grafana-network
    environment:
      - TZ=${TZ}
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  dremio:
    image: dremio/dremio-oss:21.2
    container_name: ${PLATFORM_STACK_NAME}-dremio
    restart: unless-stopped
    volumes:
      - dremio-data:/opt/dremio/data
    ports:
      - "9047:9047" # UI (HTTP)
      # - "31010:31010" # ODBC/JDBC clients
      # - "2181:2181"   # ZooKeeper
      # - "45678:45678" # Inter-node communication
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PLATFORM_STACK_NAME}-dremio.entrypoints=websecure
      - traefik.http.routers.${PLATFORM_STACK_NAME}-dremio.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME}-dremio.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME}-dremio.rule=Host(`dremio.${DOMAIN}`)
      - traefik.http.services.${PLATFORM_STACK_NAME}-dremio.loadbalancer.server.port=9047
    networks:
      - traefik-public
      - grafana-network
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  # Postgres Service
  db:
    image: greengageproject/postgres:${DB_VERSION}
    container_name: ${PLATFORM_STACK_NAME}-db
    restart: unless-stopped
    volumes:
      - db-data:${PGDATA}
    env_file:
      - .env
    environment:
      - POSTGRES_MULTIPLE_DATABASES=loomio_production,coproduction_production,catalogue_production
      - PGUSER=${POSTGRES_USERNAME} # https://stackoverflow.com/questions/60193781/postgres-with-docker-compose-gives-fatal-role-root-does-not-exist-error
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - grafana-network
      - traefik-public
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    command: postgres -N 500

  # PGAdmin (do not expose)
  # pgadmin:
  #   image: dpage/pgadmin4:6.8
  #   container_name: ${PLATFORM_STACK_NAME}-pgadmin
  #   ports:
  #     - "5050:5050"
  #   depends_on:
  #     - db
  #   env_file:
  #     - .env
  #   logging:
  #     driver: "json-file"
  #     options:
  #       tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  # MongoDB Service
  mongodb:
    image: bitnami/mongodb:6.0.3
    container_name: ${PLATFORM_STACK_NAME}-mongodb
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh admin -u $MONGODB_ROOT_USERNAME -p $MONGODB_ROOT_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      # start_period: 20s
    networks:
      - grafana-network
      - traefik-public
    volumes:
      - mongodb-data:/bitnami/mongodb
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  # Coproduction Service
  coproduction:
    image: greengageproject/backend-coproduction:${COPRODUCTION_VERSION}
    container_name: ${PLATFORM_STACK_NAME}-coproduction
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - coproduction-static:/app/static
    environment:
      - SERVER_NAME=${DOMAIN}
      - PORT=${PORT}
      - BASE_PATH=/coproduction
      - POSTGRES_DB=coproduction_production
      - POSTGRES_SERVER=db
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - CATALOGUE_SERVICE_NAME=catalogue
      - CATALOGUE_PORT=80
      - DEFAULT_LANGUAGE
      - ALLOWED_LANGUAGES
    command: ["bash", "./start-prod.sh"]
    depends_on:
      db:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME}-coproduction.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME}-coproduction.entrypoints=websecure
      - traefik.http.routers.${PLATFORM_STACK_NAME}-coproduction.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME}-coproduction.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME}-coproduction.rule=Host(`${DOMAIN}`) && PathPrefix(`/coproduction`)
      - traefik.http.routers.${PLATFORM_STACK_NAME}-coproduction.middlewares=coproduction-stripprefix
      - traefik.http.middlewares.coproduction-stripprefix.stripprefix.prefixes=/coproduction
    networks:
      - traefik-public
    links:
      - db:db
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  # Coproduction Worker Service
  coproductionworker:
    image: greengageproject/backend-coproduction:${COPRODUCTION_VERSION}
    container_name: ${PLATFORM_STACK_NAME}-coproductionworker
    restart: unless-stopped
    command: ["bash", "./worker-start.sh"]
    volumes:
      - coproduction-static:/app/static
    depends_on:
      - db
      - redis
      - coproduction
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN}
      - PORT=${PORT}
      - BASE_PATH=/coproduction
      - POSTGRES_DB=coproduction_production
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - CATALOGUE_SERVICE_NAME=catalogue
      - CATALOGUE_PORT=80
      - DEFAULT_LANGUAGE
      - ALLOWED_LANGUAGES
      - POSTGRES_SERVER=db
    networks:
      - traefik-public
    links:
      - db:db
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  # Catalogue Service
  catalogue:
    image: greengageproject/backend-catalogue:${CATALOGUE_VERSION}
    container_name: ${PLATFORM_STACK_NAME}-catalogue
    restart: unless-stopped
    volumes:
      - catalogue-static:/app/static
    environment:
      - SERVER_NAME=${DOMAIN}
      - PORT=${PORT}
      - BASE_PATH=/catalogue
      - POSTGRES_DB=catalogue_production
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_SERVER=${POSTGRES_HOST}
      - DEFAULT_LANGUAGE
      - ALLOWED_LANGUAGES
    depends_on:
      - db
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME}-catalogue.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME}-catalogue.entrypoints=websecure
      - traefik.http.routers.${PLATFORM_STACK_NAME}-catalogue.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME}-catalogue.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME}-catalogue.rule=Host(`${DOMAIN}`) && PathPrefix(`/catalogue`)
      - traefik.http.routers.${PLATFORM_STACK_NAME}-catalogue.middlewares=catalogue-stripprefix
      - traefik.http.middlewares.catalogue-stripprefix.stripprefix.prefixes=/catalogue
    command: ["bash", "./start-prod.sh"]
    networks:
      - traefik-public

    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  # Auth Service
  auth:
    image: greengageproject/backend-auth:${AUTH_VERSION}
    container_name: ${PLATFORM_STACK_NAME}-auth
    restart: unless-stopped
    environment:
      - SERVER_NAME=${DOMAIN}
      - PORT=${PORT}
      - BASE_PATH=/auth
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=users
      - CLIENT_SECRET=${LOOMIO_AAC_APP_SECRET}
    env_file:
      - .env
    volumes:
      - auth-static:/app/static
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME}-auth.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME}-auth.entrypoints=websecure
      - traefik.http.routers.${PLATFORM_STACK_NAME}-auth.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME}-auth.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME}-auth.rule=Host(`${DOMAIN}`) && PathPrefix(`/auth`)
    networks:
      - traefik-public
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  # Googledrive Interlinker
  googledrive:
    image: greengageproject/interlinker-googledrive:${GOOGLEDRIVE_VERSION}
    container_name: ${PLATFORM_STACK_NAME}-googledrive
    restart: unless-stopped
    environment:
      - SERVER_NAME=${DOMAIN}
      - PORT=${PORT}
      - BASE_PATH=/googledrive
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=googledrive_assets
      - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
      - GOOGLE_PRIVATE_KEY_ID=${GOOGLE_PRIVATE_KEY_ID}
      - GOOGLE_PRIVATE_KEY=${GOOGLE_PRIVATE_KEY}
      - GOOGLE_CLIENT_EMAIL=${GOOGLE_CLIENT_EMAIL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_X509=${GOOGLE_CLIENT_X509}
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME}-googledrive.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME}-googledrive.entrypoints=websecure
      - traefik.http.routers.${PLATFORM_STACK_NAME}-googledrive.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME}-googledrive.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME}-googledrive.rule=Host(`${DOMAIN}`) && PathPrefix(`/googledrive`)
      - traefik.http.routers.${PLATFORM_STACK_NAME}-googledrive.middlewares=googledrive-stripprefix
      - traefik.http.middlewares.googledrive-stripprefix.stripprefix.prefixes=/googledrive
    networks:
      - traefik-public
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  # Survey Editor Interlinker
  surveyeditor:
    image: greengageproject/interlinker-surveyeditor:${SURVEYEDITOR_VERSION}
    container_name: ${PLATFORM_STACK_NAME}-surveyeditor
    restart: unless-stopped
    environment:
      - SERVER_NAME=${DOMAIN}
      - PORT=${PORT}
      - BASE_PATH=/surveyeditor
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=surveyeditor_assets
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME}-surveyeditor.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME}-surveyeditor.entrypoints=websecure
      - traefik.http.routers.${PLATFORM_STACK_NAME}-surveyeditor.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME}-surveyeditor.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME}-surveyeditor.rule=Host(`${DOMAIN}`) && PathPrefix(`/surveyeditor`)
      - traefik.http.routers.${PLATFORM_STACK_NAME}-surveyeditor.middlewares=surveyeditor-stripprefix
      - traefik.http.middlewares.surveyeditor-stripprefix.stripprefix.prefixes=/surveyeditor
    networks:
      - traefik-public
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  # Ceditor Interlinker Service
  ceditor:
    image: greengageproject/interlinker-ceditor:ceditor.${CEDITOR_VERSION}
    container_name: ${PLATFORM_STACK_NAME}-ceditor
    restart: unless-stopped
    environment:
      - SERVER_NAME=${DOMAIN}
      - PORT=${PORT}
      - BASE_PATH=/ceditor
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=etherpad_assets
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME}-ceditor.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME}-ceditor.entrypoints=websecure
      - traefik.http.routers.${PLATFORM_STACK_NAME}-ceditor.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME}-ceditor.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME}-ceditor.rule=Host(`${DOMAIN}`) && PathPrefix(`/ceditor`)
      - traefik.http.routers.${PLATFORM_STACK_NAME}-ceditor.middlewares=ceditor-stripprefix
      - traefik.http.middlewares.ceditor-stripprefix.stripprefix.prefixes=/ceditor
    networks:
      - traefik-public
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

networks:
  traefik-public:
    external: true
  grafana-network:
    external: true

volumes:
  backups:

  loomio-uploads:
  loomio-storage:
  loomio-files:
  loomio-plugins:
  loomio-import:
  loomio-tmp:

  db-data:
  dremio-data:
  portainer-data:
  mongodb-data:
  elasticsearch-data:
  elasticsearch-config:
  newelasticsearch-data:
  newelasticsearch-config:
  auth-static:
  coproduction-static:
  catalogue-static:
  matomo-data:
  mariadb-data:

  grafana-dashboards:
  grafana-data:
  monitoringdb-data:
  prometheus-data:
  filebeat-data:
  grafana-elasticsearch-data:
  grafana-elasticsearch-config:

  gamification-mongo-data:
  gamification-engine-data:
