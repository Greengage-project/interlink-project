name: update-dev-environment
on:
  repository_dispatch:
    types: [update-dev-environment]

  release:
    types: [ published ]

  push:
    branches:
      - "master"
    paths:
      - .github/workflows/**
      - envs/development/**

  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment deployment'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - demo

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set env
        run: |
          # functions to avoid repeating
          set_demo() { echo "environment=demo" >> $GITHUB_ENV; echo "HOST=${{ secrets.DEMO_HOST }}" >> $GITHUB_ENV ; }
          set_dev() { echo "environment=development" >> $GITHUB_ENV; echo "HOST=${{ secrets.DEV_HOST }}" >> $GITHUB_ENV ; }

          # if a release, deploy demo
          if [[ "${{ github.event_name }}" == 'release' ]]; then
            set_demo

          # else, check input value
          else
            
            # if not value in the input, assume that the trigger is a commit on another repository, so deploy development
            if [[ -z "${{ github.event.inputs.environment }}" ]]; then
              set_dev
            
            # if input variable present, deploy depending on its value
            else
              if [[ "${{ github.event.inputs.environment }}" == 'demo' ]]; then
                set_demo
              else
                set_dev
              fi
            fi
          fi         

      - name: Deploy Dev SSH
        uses: appleboy/ssh-action@master
        env:
          DEV_LOOMIO_AAC_APP_SECRET: ${{ secrets.DEV_LOOMIO_AAC_APP_SECRET }}
          DEV_LOOMIO_SECRET_COOKIE_TOKEN: ${{ secrets.DEV_LOOMIO_SECRET_COOKIE_TOKEN }}
          DEV_LOOMIO_SMTP_USERNAME: ${{ secrets.DEV_LOOMIO_SMTP_USERNAME }}
          DEV_LOOMIO_SMTP_PASSWORD: ${{ secrets.DEV_LOOMIO_SMTP_PASSWORD }}        
          DEV_LOOMIO_DEVISE_SECRET: ${{ secrets.DEV_LOOMIO_DEVISE_SECRET }}        
        with:
          host: ${{ env.HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: DEV_LOOMIO_AAC_APP_SECRET,DEV_LOOMIO_SECRET_COOKIE_TOKEN,DEV_LOOMIO_SMTP_USERNAME,DEV_LOOMIO_SMTP_PASSWORD,DEV_LOOMIO_DEVISE_SECRET
          script: |
            export DEV_LOOMIO_SMTP_USERNAME=${{ secrets.DEV_LOOMIO_SMTP_USERNAME }}
            export DEV_LOOMIO_AAC_APP_SECRET=${{ secrets.DEV_LOOMIO_AAC_APP_SECRET }}
            export DEV_MAIL_PASSWORD=${{ secrets.DEV_MAIL_PASSWORD }}
            export DEV_LOOMIO_SECRET_COOKIE_TOKEN=${{ secrets.DEV_LOOMIO_SECRET_COOKIE_TOKEN }}
            export DEV_LOOMIO_SMTP_PASSWORD=${{ secrets.DEV_LOOMIO_SMTP_PASSWORD }}        
            export DEV_LOOMIO_DEVISE_SECRET=${{ secrets.DEV_LOOMIO_DEVISE_SECRET }}
            export ENVIRONMENT=${{ env.environment }}
            cd /datadrive/data/interlink-project
            git pull --ff-only
            cd envs/development
            docker-compose down --remove-orphans
            docker-compose pull
            docker network create traefik-public
            docker-compose --env-file .env.${{ env.environment }} up -d
            sleep 10
            docker-compose exec -T catalogue python /app/app/pre_start.py
            docker-compose exec -T catalogue ./seed.sh
            docker-compose exec -T coproduction python /app/app/pre_start.py
            docker-compose exec -T coproduction ./seed.sh
