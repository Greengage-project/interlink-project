name: update-zgz-environment
on:

  workflow_dispatch:

jobs:
  deploy:
    # Ensures that only one deploy task per branch/environment will run at a time.
#    concurrency:
#      group: environment-${{ github.ref }}
#      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - name: Deploy PILOT-ZGZ SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ZGZ_HOST }}
          username: ${{ secrets.ZGZ_USERNAME }}
          key: ${{ secrets.ZGZ_SSH_KEY }}
          script: |
            export LOOMIO_SMTP_USERNAME=${{ secrets.ZGZ_LOOMIO_SMTP_USERNAME }}
            export LOOMIO_AAC_APP_SECRET=${{ secrets.ZGZ_LOOMIO_AAC_APP_SECRET }}
            export MAIL_PASSWORD=${{ secrets.ZGZ_MAIL_PASSWORD }}
            export LOOMIO_SECRET_COOKIE_TOKEN=${{ secrets.ZGZ_LOOMIO_SECRET_COOKIE_TOKEN }}
            export LOOMIO_SMTP_PASSWORD=${{ secrets.ZGZ_LOOMIO_SMTP_PASSWORD }}        
            export LOOMIO_DEVISE_SECRET=${{ secrets.ZGZ_LOOMIO_DEVISE_SECRET }}
            export GRAFANA_USERNAME=${{ secrets.ZGZ_GRAFANA_USERNAME }}
            export GRAFANA_PASSWORD=${{ secrets.ZGZ_GRAFANA_PASSWORD }}
            export GOOGLE_PROJECT_ID=${{ secrets.GOOGLE_PROJECT_ID }}
            export GOOGLE_PRIVATE_KEY_ID=${{ secrets.GOOGLE_PRIVATE_KEY_ID }}
            export GOOGLE_PRIVATE_KEY=${{ secrets.GOOGLE_PRIVATE_KEY }}
            export GOOGLE_CLIENT_EMAIL=${{ secrets.GOOGLE_CLIENT_EMAIL }}
            export GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            export ENVIRONMENT=zgz
            cd /datadrive/data/
            git clone https://github.com/interlink-project/interlink-project.git || (cd /datadrive/data/interlink-project )
            cd /datadrive/data/interlink-project/envs
            git fetch origin
            git checkout ${{ github.ref_name }}
            cd /datadrive/data/interlink-project/envs/pilot-zgz
            docker-compose -f docker-compose.yml --env-file .env.zgz pull
            docker network create traefik-public || true
            docker network create grafana-network || true
            docker-compose -f docker-compose.yml --env-file .env.zgz  -p pilot-zgz up -d
            sleep 10
            docker-compose --env-file .env.zgz exec -T catalogue python /app/app/pre_start.py
            docker-compose --env-file .env.zgz exec -T catalogue ./seed.sh